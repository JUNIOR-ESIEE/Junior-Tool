imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@JuniorEtudeBundle/Resources/config/services.yml" }
    - { resource: "@JuniorWebsiteBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
        scssphp:
            formatter: 'Leafo\ScssPhp\Formatter\Compressed'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Sonata block
sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        sonata.admin.block.search_result:
        sonata.admin.block.stats:
        # ...

# Sonata admin
sonata_admin:
    title:      Junior ESIEE
    title_logo: images/logo.png
    templates:
        dashboard: SonataAdminBundle:Core:dashboard.html.twig
    dashboard:
        blocks:
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: junior_etude.admin
                    icon: fa-tasks
                    text: Etudes sur le site
                    color: bg-blue
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: junior_etude.admin
                    icon: fa-envelope-o
                    text: Nouvelles études
                    color: bg-green
                    filters:
                        state : { value : state_waiting_information }
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: junior_etude.admin
                    icon: fa-briefcase
                    text: Sans commercial
                    color: bg-red
                    filters:
                        commercial : { value : null }
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: junior_etude.admin
                    icon: fa-pencil
                    text: Sans réalisateur
                    color: bg-red
                    filters:
                        student : { value : null }
    security:
        handler: sonata.admin.security.handler.acl
        # acl security information
        information:
            GUEST:    [VIEW, LIST]
            STAFF:    [EDIT, LIST, CREATE]
            EDITOR:   [OPERATOR, EXPORT]
            ADMIN:    [MASTER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager

sonata_media:
    # if you don't use default namespace configuration
    class:
        media:        Application\Sonata\MediaBundle\Entity\Media
        gallery:      Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Sonata\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        scopeStatement:
            download:
                strategy: sonata.media.security.superadmin_strategy

            providers:
                - sonata.media.provider.file

            formats:
                big:   { width: 500 , quality: 90}
                small: { width: 90 , quality: 95}
        graphicCharter:
            download:
                strategy: sonata.media.security.superadmin_strategy

            providers:
                - sonata.media.provider.file

            formats:
                big:   { width: 500 , quality: 90}
                small: { width: 90 , quality: 95}
    cdn:
        server:
            path: "%hostname%/uploads/media" # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false